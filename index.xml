<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>李杨帅 的 Boke</title>
    <link>https://comicparty.github.io/</link>
    <description>Recent content on 李杨帅 的 Boke</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <lastBuildDate>Sun, 20 Sep 2020 16:31:14 +0800</lastBuildDate>
    
	<atom:link href="https://comicparty.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>18浅析URL</title>
      <link>https://comicparty.github.io/post/18%E6%B5%85%E6%9E%90url/</link>
      <pubDate>Sun, 20 Sep 2020 16:31:14 +0800</pubDate>
      
      <guid>https://comicparty.github.io/post/18%E6%B5%85%E6%9E%90url/</guid>
      <description>URL 包含哪几部分，每部分分别有什么作用 URL 的组成是： 协议 + 域名或IP + 端口号 + 路径 + 查询字符串 + 锚点
  协议 代表该页面使用何种协议
  域名或IP 要访问一台互联网上的服务器，最终还必须通过IP地址来实现，域名解析就是将域名重新转换为IP地址的过程。
  端口号 跟在域名后面的是端口，域名和端口之间使用“:”作为分隔符。端口不是一个URL必须的部分，如果省略端口部分，将采用默认端口。
  路径 访问的资源在服务器下的相对路径，是服务器上的一个目录或者文件地址。
  查询字符串 查询搜索的部分，通过问号？连接到路径后面，有时候也归类到路径中。
  锚点 从“#”开始到最后，都是锚部分。锚部分不是一个URL必须的部分。
  DNS 的作用是什么，nslookup 命令怎么用  DNS 的作用 DNS服务器是计算机域名系统 (Domain Name System 或 Domain Name Service) 的缩写，它是由解析器和域名服务器组成的。作用是把域名转换成为网络可以识别的 IP 地址，然后进行实际网络通讯。 nslookup 命令怎么用 运行 cmder， 输入命令 &amp;ldquo;nslookup + 域名&amp;rdquo;, 可以得到该域名的服务器。  IP 的作用是什么，ping 命令怎么用 输入“ping 网站地址”命令检查网络是否畅通和输入“ping 其它电脑ip”命令是否能连接局域网其它电脑。</description>
    </item>
    
    <item>
      <title>十八css总结</title>
      <link>https://comicparty.github.io/posts/%E5%8D%81%E5%85%ABcss%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 11 Aug 2020 16:31:00 +0800</pubDate>
      
      <guid>https://comicparty.github.io/posts/%E5%8D%81%E5%85%ABcss%E6%80%BB%E7%BB%93/</guid>
      <description>浏览器渲染原理 虽然具体渲染过程很复杂，但是还是可以将其分为几个关键路径，如下：
 处理 HTML 标记并构建 DOM 树 处理 CSS 标记并构建 CSSOM 树 将 DOM 与 CSSOM 合并成一个渲染树 根据渲染树来布局，以计算每个节点的几何信息，再将各个节点绘制到屏幕上  CSS 动画的两种做法（transition 和 animation） transition 补间动画 我们只要设置一个开头 和 一个结尾，中间的动画内容不需要操心会自动补齐，这是补间动画。 transition属性可以被指定为一个或多个 CSS 属性的过渡效果，多个属性之间用逗号进行分隔。
transition:属性名|时长|过渡方式|延迟; transform 四个功能
 translate rotate scale skew  animation 帧动画 我们可以通过添加关键帧，来设置中间动画变化。
animation:时长|过渡方式|延迟|次数|方向|填充模式|是否暂停|动画名; /*可以使用 百分比添加关键帧，from==0%,to == 100% */ @keyframes slidein{ 0%{ /* 开始的时候，怎么变化*/ } 30%{ /* 到30%的时候，怎么变化*/ } to{ /* 100%的时候，怎么变化*/ } } 其他任何你想写的。 CCS是真的难，我都心理建设一个多月才好的。</description>
    </item>
    
    <item>
      <title>十二HTML常用标签</title>
      <link>https://comicparty.github.io/posts/%E5%8D%81%E4%BA%8Chtml%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Sat, 27 Jun 2020 17:57:49 +0800</pubDate>
      
      <guid>https://comicparty.github.io/posts/%E5%8D%81%E4%BA%8Chtml%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      <description>a 标签 a标签是一个链接，常用来进行跳转、导航使用。 写法
&amp;lt;a href=&amp;#34;//baidu.com&amp;#34; target=&amp;#34;_blank&amp;#34;&amp;gt;BaiDu&amp;lt;/a&amp;gt; 属性：
 href属性的取值:  网址： https://baidu.com http://baidu.com //baidu.com 路径：(/为http服务开启的目录) /a/b/a/b/a/b 及/a/b/a.html index.html 及 ./index.html id锚点：（值 为 某个元素的id值） href=&amp;#34;#titelOneID&amp;#34; 伪协议： href=&amp;#34;javascript:alert(&amp;#34;abc&amp;#34;);&amp;#34; tel=&amp;#34;1111&amp;#34; mailto=&amp;#34;a@a.a&amp;#34;  target的取值：  内置名字 _self _blank _top _parent 程序员写的： 浏览器窗口的 name值 iframe的 name值  download  作用 下载页面
问题 很多浏览器不支持
 rel=noopener  作用：
 跳转外部页面 跳转内中锚点 跳转到邮箱或电话等  img 标签的用法 image标签会发送get请求，展示一张图片。 前端工程师需要保证图片不会变形
&amp;lt;img src=&amp;#34;&amp;#34; alt=&amp;#34;&amp;#34; width=&amp;#34;&amp;#34; height=&amp;#34;&amp;#34;/&amp;gt;  属性 src是source的意思，值：   可以是网址 可以是路径  alt是alternative的意思很容易记住 功能 当图片加载失败后，可以显示文字，代替图片进行说明。</description>
    </item>
    
    <item>
      <title>十一 HTML入门笔记（一）</title>
      <link>https://comicparty.github.io/posts/11html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Thu, 25 Jun 2020 17:22:46 +0800</pubDate>
      
      <guid>https://comicparty.github.io/posts/11html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</guid>
      <description>这篇博客的内容主要是针对10、11制作的 学习笔记
HTML 是谁发明的? HTML由英国的 李爵士 发明的。 他写了世界上第一个浏览器和服务器，还他用浏览器访问了自己的服务器。 他还发明了WWW,同时发明了HTML、HTTP和URL。
HTML代码为： &amp;lt;DOCTYPE html&amp;gt; &amp;lt;!-- 告诉浏览器文档类型，用什么解析 --&amp;gt; &amp;lt;html lang=&amp;#34;zh-CN&amp;#34;&amp;gt; &amp;lt;!-- HTML是根标签，里面有两个 标签：head &amp;amp; body --&amp;gt; &amp;lt;!-- lang用来设置 网页语言 --&amp;gt; &amp;lt;!-- 淘宝、qq都使用的zh-CN --&amp;gt; &amp;lt;head&amp;gt; &amp;lt;!-- head里面主要有 meta(元数据) 和 title(标题)标签 --&amp;gt; &amp;lt;title&amp;gt;网页&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;!-- body标签用来存放网页的内容 --&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 常用的章节的标签如下：  header   HTML &amp;lt;header&amp;gt; 元素用于展示介绍性内容，通常包含一组介绍性的或是辅助导航的实用元素。它可能包含一些标题元素，但也可能包含其他元素，比如 Logo、搜索框、作者名称，等等。
  main   HTML &amp;lt;main&amp;gt; 元素呈现了文档的 &amp;lt;body&amp;gt; 或应用的主体部分。主体部分由与文档直接相关，或者扩展于文档的中心主题、应用的主要功能部分的内容组成。
  section   HTML &amp;lt;section&amp;gt;元素表示一个包含在HTML文档中的独立部分，它没有更具体的语义元素来表示，一般来说会有包含一个标题。</description>
    </item>
    
    <item>
      <title>如何使用hugo搭建博客 共7步</title>
      <link>https://comicparty.github.io/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 25 Jun 2020 12:32:43 +0800</pubDate>
      
      <guid>https://comicparty.github.io/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>正如文章名所说，这是一篇教人用hugo搭建博客的教程。 下面的操作都是在mac上进行的。 步骤，在hugo官网上面都有
下面咱们齐步走 1.安装hugo brew install hugo hugo version 成功安装hugo是可以查询hugo版本的 2.hugo new site comicparty.github.io-creator 里面的comicparty是使用的github名称，注意要小写。 3.执行肆句话 注意：执行的时候需要下载东西，所以网络要好 4.hugo new posts/xxx.md 这一步相当于 创建一篇博客，博客名可以自定义
创建成功之后，打开他 如果想写第篇博客，还是这个hugo new post/xxx.md代码，只需要换个博客名，就行
5.hugo server -D本地预览博客 6.修改config.toml文件 baseURL= github pages显示的网址 languageCode = 语言 zh-hans zh =中文 han =汉字 s =简体 title =标题 theme =主题 7.使用源代码生成博客 输入之后，会看到一个叫 public文件夹，咱们的博客就在里面，把public上传到github上面，就可以炫友了。
8.结束 以上就是用hugo写博客的内容了886</description>
    </item>
    
    <item>
      <title>Openbodaji</title>
      <link>https://comicparty.github.io/posts/openbodaji/</link>
      <pubDate>Thu, 25 Jun 2020 10:15:19 +0800</pubDate>
      
      <guid>https://comicparty.github.io/posts/openbodaji/</guid>
      <description>大家好 我的博客来啦，昨天购买的网站要上线了啦～</description>
    </item>
    
  </channel>
</rss>